/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetChangelogResponseAllOfDataInner {
    /// The key of the field that was changed
    #[serde(rename = "field_key", skip_serializing_if = "Option::is_none")]
    pub field_key: Option<String>,
    /// The value of the field before the change
    #[serde(rename = "old_value", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub old_value: Option<Option<String>>,
    /// The value of the field after the change
    #[serde(rename = "new_value", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub new_value: Option<Option<String>>,
    /// The ID of the user who made the change
    #[serde(rename = "actor_user_id", skip_serializing_if = "Option::is_none")]
    pub actor_user_id: Option<i32>,
    /// The date and time of the change
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
    /// The source of change, for example 'app', 'mobile', 'api', etc.
    #[serde(rename = "change_source", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub change_source: Option<Option<String>>,
    /// The user agent from which the change was made
    #[serde(rename = "change_source_user_agent", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub change_source_user_agent: Option<Option<String>>,
    /// Whether the change was made as part of a bulk update
    #[serde(rename = "is_bulk_update_flag", skip_serializing_if = "Option::is_none")]
    pub is_bulk_update_flag: Option<bool>,
}

impl GetChangelogResponseAllOfDataInner {
    pub fn new() -> GetChangelogResponseAllOfDataInner {
        GetChangelogResponseAllOfDataInner {
            field_key: None,
            old_value: None,
            new_value: None,
            actor_user_id: None,
            time: None,
            change_source: None,
            change_source_user_agent: None,
            is_bulk_update_flag: None,
        }
    }
}

