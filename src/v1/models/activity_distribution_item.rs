/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::v1::models;
use serde::{Deserialize, Serialize};

/// ActivityDistributionItem : The ID of the user
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActivityDistributionItem {
    #[serde(rename = "activities", skip_serializing_if = "Option::is_none")]
    pub activities: Option<Box<models::ActivityTypeCount>>,
    /// The name of the user
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The overall count of activities for the user
    #[serde(rename = "activity_count", skip_serializing_if = "Option::is_none")]
    pub activity_count: Option<i32>,
    /// The percentage of activities belongs to the user
    #[serde(rename = "share", skip_serializing_if = "Option::is_none")]
    pub share: Option<i32>,
}

impl ActivityDistributionItem {
    /// The ID of the user
    pub fn new() -> ActivityDistributionItem {
        ActivityDistributionItem {
            activities: None,
            name: None,
            activity_count: None,
            share: None,
        }
    }
}

