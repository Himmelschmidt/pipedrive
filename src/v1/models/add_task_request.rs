/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddTaskRequest {
    /// The title of the task
    #[serde(rename = "title")]
    pub title: String,
    /// The ID of a project
    #[serde(rename = "project_id")]
    pub project_id: f64,
    /// The description of the task
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The ID of a parent task. Can not be ID of a task which is already a subtask.
    #[serde(rename = "parent_task_id", skip_serializing_if = "Option::is_none")]
    pub parent_task_id: Option<f64>,
    /// The ID of the user who will be the assignee of the task
    #[serde(rename = "assignee_id", skip_serializing_if = "Option::is_none")]
    pub assignee_id: Option<f64>,
    #[serde(rename = "done", skip_serializing_if = "Option::is_none")]
    pub done: Option<Done>,
    /// The due date of the task. Format: YYYY-MM-DD.
    #[serde(rename = "due_date", skip_serializing_if = "Option::is_none")]
    pub due_date: Option<String>,
}

impl AddTaskRequest {
    pub fn new(title: String, project_id: f64) -> AddTaskRequest {
        AddTaskRequest {
            title,
            project_id,
            description: None,
            parent_task_id: None,
            assignee_id: None,
            done: None,
            due_date: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Done {
    #[serde(rename = "0")]
    Variant0,
    #[serde(rename = "1")]
    Variant1,
}

impl Default for Done {
    fn default() -> Done {
        Self::Variant0
    }
}

