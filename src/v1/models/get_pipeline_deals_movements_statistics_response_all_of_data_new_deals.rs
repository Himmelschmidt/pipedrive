/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::v1::models;
use serde::{Deserialize, Serialize};

/// GetPipelineDealsMovementsStatisticsResponseAllOfDataNewDeals : Deals summary
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetPipelineDealsMovementsStatisticsResponseAllOfDataNewDeals {
    /// The count of the deals
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    /// The IDs of the deals that have been moved
    #[serde(rename = "deals_ids", skip_serializing_if = "Option::is_none")]
    pub deals_ids: Option<Vec<i32>>,
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<Box<models::GetPipelineDealsMovementsStatisticsResponseAllOfDataNewDealsValues>>,
    #[serde(rename = "formatted_values", skip_serializing_if = "Option::is_none")]
    pub formatted_values: Option<Box<models::GetPipelineDealsMovementsStatisticsResponseAllOfDataNewDealsFormattedValues>>,
}

impl GetPipelineDealsMovementsStatisticsResponseAllOfDataNewDeals {
    /// Deals summary
    pub fn new() -> GetPipelineDealsMovementsStatisticsResponseAllOfDataNewDeals {
        GetPipelineDealsMovementsStatisticsResponseAllOfDataNewDeals {
            count: None,
            deals_ids: None,
            values: None,
            formatted_values: None,
        }
    }
}

