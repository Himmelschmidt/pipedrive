/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserAccess1 {
    #[serde(rename = "app")]
    pub app: App,
    #[serde(rename = "admin", skip_serializing_if = "Option::is_none")]
    pub admin: Option<bool>,
    #[serde(rename = "permission_set_id", skip_serializing_if = "Option::is_none")]
    pub permission_set_id: Option<String>,
}

impl UserAccess1 {
    pub fn new(app: App) -> UserAccess1 {
        UserAccess1 {
            app,
            admin: None,
            permission_set_id: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum App {
    #[serde(rename = "global")]
    Global,
    #[serde(rename = "sales")]
    Sales,
    #[serde(rename = "campaigns")]
    Campaigns,
    #[serde(rename = "projects")]
    Projects,
    #[serde(rename = "account_settings")]
    AccountSettings,
    #[serde(rename = "partnership")]
    Partnership,
}

impl Default for App {
    fn default() -> App {
        Self::Global
    }
}

