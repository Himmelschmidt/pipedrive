/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetProjectPlanResponseDataInner {
    /// ID of plan item (either activity or task ID)
    #[serde(rename = "item_id", skip_serializing_if = "Option::is_none")]
    pub item_id: Option<f64>,
    /// Type of a plan item (task / activity)
    #[serde(rename = "item_type", skip_serializing_if = "Option::is_none")]
    pub item_type: Option<String>,
    /// The ID of the board this project is associated with. If null then plan item is not in any phase.
    #[serde(rename = "phase_id", skip_serializing_if = "Option::is_none")]
    pub phase_id: Option<f64>,
    /// The ID of the board this project is associated with. If null then plan item is not in any group.
    #[serde(rename = "group_id", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<f64>,
}

impl GetProjectPlanResponseDataInner {
    pub fn new() -> GetProjectPlanResponseDataInner {
        GetProjectPlanResponseDataInner {
            item_id: None,
            item_type: None,
            phase_id: None,
            group_id: None,
        }
    }
}

