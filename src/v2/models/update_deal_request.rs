/*
 * Pipedrive API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateDealRequest {
    /// The title of the deal
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The ID of the user who owns the deal
    #[serde(rename = "owner_id", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<i32>,
    /// The ID of the person linked to the deal
    #[serde(rename = "person_id", skip_serializing_if = "Option::is_none")]
    pub person_id: Option<i32>,
    /// The ID of the organization linked to the deal
    #[serde(rename = "org_id", skip_serializing_if = "Option::is_none")]
    pub org_id: Option<i32>,
    /// The ID of the pipeline associated with the deal
    #[serde(rename = "pipeline_id", skip_serializing_if = "Option::is_none")]
    pub pipeline_id: Option<i32>,
    /// The ID of the deal stage
    #[serde(rename = "stage_id", skip_serializing_if = "Option::is_none")]
    pub stage_id: Option<i32>,
    /// The value of the deal
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<f64>,
    /// The currency associated with the deal
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    /// The creation date and time of the deal
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The last updated date and time of the deal
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    /// The last updated date and time of the deal stage
    #[serde(rename = "stage_change_time", skip_serializing_if = "Option::is_none")]
    pub stage_change_time: Option<String>,
    /// Whether the deal is deleted or not
    #[serde(rename = "is_deleted", skip_serializing_if = "Option::is_none")]
    pub is_deleted: Option<bool>,
    /// Whether the deal is archived or not
    #[serde(rename = "is_archived", skip_serializing_if = "Option::is_none")]
    pub is_archived: Option<bool>,
    /// The optional date and time of archiving the deal in UTC. Format: YYYY-MM-DD HH:MM:SS. If omitted and `is_archived` is true, it will be set to the current date and time.
    #[serde(rename = "archive_time", skip_serializing_if = "Option::is_none")]
    pub archive_time: Option<String>,
    /// The status of the deal
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The success probability percentage of the deal
    #[serde(
        rename = "probability",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub probability: Option<Option<f64>>,
    /// The reason for losing the deal. Can only be set if deal status is lost.
    #[serde(
        rename = "lost_reason",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub lost_reason: Option<Option<String>>,
    /// The visibility of the deal
    #[serde(rename = "visible_to", skip_serializing_if = "Option::is_none")]
    pub visible_to: Option<i32>,
    /// The date and time of closing the deal. Can only be set if deal status is won or lost.
    #[serde(
        rename = "close_time",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub close_time: Option<Option<String>>,
    /// The date and time of changing the deal status as won. Can only be set if deal status is won.
    #[serde(rename = "won_time", skip_serializing_if = "Option::is_none")]
    pub won_time: Option<String>,
    /// The date and time of changing the deal status as lost. Can only be set if deal status is lost.
    #[serde(rename = "lost_time", skip_serializing_if = "Option::is_none")]
    pub lost_time: Option<String>,
    /// The expected close date of the deal
    #[serde(
        rename = "expected_close_date",
        skip_serializing_if = "Option::is_none"
    )]
    pub expected_close_date: Option<String>,
    /// The IDs of labels assigned to the deal
    #[serde(rename = "label_ids", skip_serializing_if = "Option::is_none")]
    pub label_ids: Option<Vec<i32>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<std::collections::HashMap<String, serde_json::Value>>,
}

impl UpdateDealRequest {
    pub fn new() -> UpdateDealRequest {
        UpdateDealRequest {
            title: None,
            owner_id: None,
            person_id: None,
            org_id: None,
            pipeline_id: None,
            stage_id: None,
            value: None,
            currency: None,
            add_time: None,
            update_time: None,
            stage_change_time: None,
            is_deleted: None,
            is_archived: None,
            archive_time: None,
            status: None,
            probability: None,
            lost_reason: None,
            visible_to: None,
            close_time: None,
            won_time: None,
            lost_time: None,
            expected_close_date: None,
            label_ids: None,
            custom_fields: None,
        }
    }
}
