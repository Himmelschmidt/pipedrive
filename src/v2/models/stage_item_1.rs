/*
 * Pipedrive API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

/// StageItem1 : The stage object
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StageItem1 {
    /// The ID of the stage
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Defines the order of the stage
    #[serde(rename = "order_nr", skip_serializing_if = "Option::is_none")]
    pub order_nr: Option<i32>,
    /// The name of the stage
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Whether the stage is marked as deleted or not
    #[serde(rename = "is_deleted", skip_serializing_if = "Option::is_none")]
    pub is_deleted: Option<bool>,
    /// The success probability percentage of the deal. Used/shown when the deal weighted values are used.
    #[serde(rename = "deal_probability", skip_serializing_if = "Option::is_none")]
    pub deal_probability: Option<i32>,
    /// The ID of the pipeline to add the stage to
    #[serde(rename = "pipeline_id", skip_serializing_if = "Option::is_none")]
    pub pipeline_id: Option<i32>,
    /// Whether deals in this stage can become rotten
    #[serde(rename = "is_deal_rot_enabled", skip_serializing_if = "Option::is_none")]
    pub is_deal_rot_enabled: Option<bool>,
    /// The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
    #[serde(rename = "days_to_rotten", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub days_to_rotten: Option<Option<i32>>,
    /// The stage creation time
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The stage update time
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
}

impl StageItem1 {
    /// The stage object
    pub fn new() -> StageItem1 {
        StageItem1 {
            id: None,
            order_nr: None,
            name: None,
            is_deleted: None,
            deal_probability: None,
            pipeline_id: None,
            is_deal_rot_enabled: None,
            days_to_rotten: None,
            add_time: None,
            update_time: None,
        }
    }
}

