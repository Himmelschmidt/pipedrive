/*
 * Pipedrive API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetProductVariationsResponseDataInner {
    /// The ID of the product variation
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<f64>,
    /// The name of the product variation
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The ID of the product
    #[serde(rename = "product_id", skip_serializing_if = "Option::is_none")]
    pub product_id: Option<i32>,
    /// Array of objects, each containing: product_variation_id (number), currency (string), price (number), cost (number), direct_cost (number) , notes (string)
    #[serde(rename = "prices", skip_serializing_if = "Option::is_none")]
    pub prices: Option<Vec<serde_json::Value>>,
}

impl GetProductVariationsResponseDataInner {
    pub fn new() -> GetProductVariationsResponseDataInner {
        GetProductVariationsResponseDataInner {
            id: None,
            name: None,
            product_id: None,
            prices: None,
        }
    }
}

