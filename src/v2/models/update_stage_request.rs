/*
 * Pipedrive API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateStageRequest {
    /// The name of the stage
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The ID of the pipeline to add stage to
    #[serde(rename = "pipeline_id", skip_serializing_if = "Option::is_none")]
    pub pipeline_id: Option<i32>,
    /// The success probability percentage of the deal. Used/shown when deal weighted values are used.
    #[serde(rename = "deal_probability", skip_serializing_if = "Option::is_none")]
    pub deal_probability: Option<i32>,
    /// Whether deals in this stage can become rotten
    #[serde(rename = "is_deal_rot_enabled", skip_serializing_if = "Option::is_none")]
    pub is_deal_rot_enabled: Option<bool>,
    /// The number of days the deals not updated in this stage would become rotten. Applies only if the `is_deal_rot_enabled` is set.
    #[serde(rename = "days_to_rotten", skip_serializing_if = "Option::is_none")]
    pub days_to_rotten: Option<i32>,
}

impl UpdateStageRequest {
    pub fn new() -> UpdateStageRequest {
        UpdateStageRequest {
            name: None,
            pipeline_id: None,
            deal_probability: None,
            is_deal_rot_enabled: None,
            days_to_rotten: None,
        }
    }
}

