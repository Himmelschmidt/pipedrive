/*
 * Pipedrive API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

/// GetConvertResponse1Data : An object containing conversion status. After successful conversion the converted entity ID is also present.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetConvertResponse1Data {
    /// The ID of the new lead.
    #[serde(rename = "lead_id", skip_serializing_if = "Option::is_none")]
    pub lead_id: Option<uuid::Uuid>,
    /// The ID of the new deal.
    #[serde(rename = "deal_id", skip_serializing_if = "Option::is_none")]
    pub deal_id: Option<i32>,
    /// The ID of the conversion job. The ID can be used to retrieve conversion status and details. The ID has UUID format.
    #[serde(rename = "conversion_id")]
    pub conversion_id: uuid::Uuid,
    /// Status of the conversion job.
    #[serde(rename = "status")]
    pub status: Status,
}

impl GetConvertResponse1Data {
    /// An object containing conversion status. After successful conversion the converted entity ID is also present.
    pub fn new(conversion_id: uuid::Uuid, status: Status) -> GetConvertResponse1Data {
        GetConvertResponse1Data {
            lead_id: None,
            deal_id: None,
            conversion_id,
            status,
        }
    }
}
/// Status of the conversion job.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "not_started")]
    NotStarted,
    #[serde(rename = "running")]
    Running,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "rejected")]
    Rejected,
}

impl Default for Status {
    fn default() -> Status {
        Self::NotStarted
    }
}

