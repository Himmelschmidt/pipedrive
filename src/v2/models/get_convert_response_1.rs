/*
 * Pipedrive API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::v2::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetConvertResponse1 {
    #[serde(rename = "success")]
    pub success: bool,
    #[serde(rename = "data")]
    pub data: Box<models::GetConvertResponse1Data>,
    #[serde(rename = "additional_data", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub additional_data: Option<Option<serde_json::Value>>,
}

impl GetConvertResponse1 {
    pub fn new(success: bool, data: models::GetConvertResponse1Data) -> GetConvertResponse1 {
        GetConvertResponse1 {
            success,
            data: Box::new(data),
            additional_data: None,
        }
    }
}

